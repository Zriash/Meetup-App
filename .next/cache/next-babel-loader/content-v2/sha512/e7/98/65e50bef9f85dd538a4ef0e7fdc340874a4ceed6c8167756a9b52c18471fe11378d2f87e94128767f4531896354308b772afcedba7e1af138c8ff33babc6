{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\avior\\\\Desktop\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\n\nvar MeetupDetailsPage = function MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    meetupData: props.meetupData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = MeetupDetailsPage;\nexport var __N_SSG = true;\nexport default MeetupDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailsPage\");","map":{"version":3,"sources":["C:/Users/avior/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetails","MeetupDetailsPage","props","meetupData"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;;AAGA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AACjC,sBAAO,QAAC,aAAD;AAAe,IAAA,UAAU,EAAEA,KAAK,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,CAFD;;KAAMF,iB;;AAuDN,eAAeA,iBAAf","sourcesContent":["import MeetupDetails from '../../components/meetups/MeetupDetails';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n    return <MeetupDetails meetupData={props.meetupData} />;\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Zriash-mgr:WUYvTyAS7qKiH7Je@cluster0.f1ngx.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  ); // storing connection to database (mongo atlas) on const client\r\n  const db = client.db(); // storing the db\r\n\r\n  const meetupsCollection = db.collection('meetups'); // storing the collection of choice on const meetupsCollection\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); // find all the meetups from db and extract only id\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: {\r\n        meetupId: meetup._id.toString(),\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Zriash-mgr:WUYvTyAS7qKiH7Je@cluster0.f1ngx.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  ); // storing connection to database (mongo atlas) on const client\r\n  const db = client.db(); // storing the db\r\n\r\n  const meetupsCollection = db.collection('meetups'); // storing the collection of choice on const meetupsCollection\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}